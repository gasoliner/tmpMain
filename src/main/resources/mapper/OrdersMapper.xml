<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tmp.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="cn.tmp.po.Orders">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sum" jdbcType="DECIMAL" property="sum" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="var" jdbcType="VARCHAR" property="var" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, name, sum, time, state, cid, var
  </sql>
  <select id="selectByExample" parameterType="cn.tmp.po.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tmp.po.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tmp.po.Orders">
    insert into orders (oid, name, sum, 
      time, state, cid, 
      var)
    values (#{oid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sum,jdbcType=DECIMAL}, 
      #{time,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, 
      #{var,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.tmp.po.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sum != null">
        sum,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="var != null">
        var,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="var != null">
        #{var,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tmp.po.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sum != null">
        sum = #{record.sum,jdbcType=DECIMAL},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.var != null">
        var = #{record.var,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set oid = #{record.oid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sum = #{record.sum,jdbcType=DECIMAL},
      time = #{record.time,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      var = #{record.var,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tmp.po.Orders">
    update orders
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sum != null">
        sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="var != null">
        var = #{var,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tmp.po.Orders">
    update orders
    set name = #{name,jdbcType=VARCHAR},
      sum = #{sum,jdbcType=DECIMAL},
      time = #{time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER},
      var = #{var,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>